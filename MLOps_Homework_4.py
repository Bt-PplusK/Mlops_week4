# -*- coding: utf-8 -*-
"""MlOps_Homework_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KiCc5i0wDEZWKGgBu0zlFBXaxxOn6JDG
"""

import argparse
import pickle
import numpy as np
import pandas as pd
import os

# Define categorical columns
categorical = ['PULocationID', 'DOLocationID']

# Function to read and preprocess data
def read_data(filename):
    df = pd.read_parquet(filename)
    df['duration'] = df.tpep_dropoff_datetime - df.tpep_pickup_datetime
    df['duration'] = df.duration.dt.total_seconds() / 60
    df = df[(df.duration >= 1) & (df.duration <= 60)].copy()
    df[categorical] = df[categorical].fillna(-1).astype('int').astype('str')
    return df

# Main function
def main(year, month):
    # Load the model
    with open('model.bin', 'rb') as f_in:
        dv, model = pickle.load(f_in)

    # Create the filename based on year and month
    filename = f'https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_{year}-{month:02d}.parquet'
    df = read_data(filename)

    # Convert categorical columns to dictionary records
    dicts = df[categorical].to_dict(orient='records')

    # Transform the data using the DictVectorizer
    X_val = dv.transform(dicts)

    # Predict the duration
    y_pred = model.predict(X_val)

    # Create the ride_id column
    df['ride_id'] = f'{year:04d}/{month:02d}_' + df.index.astype('str')

    # Prepare the result dataframe with ride_id and predictions
    df_result = pd.DataFrame({
        'ride_id': df['ride_id'],
        'predictions': y_pred
    })


# Argument parser
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predict taxi ride durations.')
    parser.add_argument('--year', type=int, required=True, help='Year of the data.')
    parser.add_argument('--month', type=int, required=True, help='Month of the data.')
    args = parser.parse_args()

    main(args.year, args.month)


#python MLOps_Homework_4.py --year 2023 --month 4
